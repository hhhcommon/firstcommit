<?php
// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.2
//
// <auto-generated>
//
// Generated from file `Communicator.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

require_once __DIR__.'/../Ice/LoggerF.php';
require_once __DIR__.'/../Ice/InstrumentationF.php';
require_once __DIR__.'/../Ice/ObjectAdapterF.php';
require_once __DIR__.'/../Ice/ObjectFactoryF.php';
require_once __DIR__.'/../Ice/RouterF.php';
require_once __DIR__.'/../Ice/LocatorF.php';
require_once __DIR__.'/../Ice/PluginF.php';
require_once __DIR__.'/../Ice/ImplicitContextF.php';
require_once __DIR__.'/../Ice/Current.php';
require_once __DIR__.'/../Ice/Properties.php';
require_once __DIR__.'/../Ice/FacetMap.php';

global $Ice__t_Communicator;

if(!interface_exists('Ice_Communicator',false))
{
    interface Ice_Communicator
    {
        public function destroy();
        public function shutdown();
        public function waitForShutdown();
        public function isShutdown();
        public function stringToProxy($str);
        public function proxyToString($obj);
        public function propertyToProxy($property);
        public function proxyToProperty($proxy, $property);
        public function stringToIdentity($str);
        public function identityToString($ident);
        public function createObjectAdapter($name);
        public function createObjectAdapterWithEndpoints($name, $endpoints);
        public function createObjectAdapterWithRouter($name, $rtr);
        public function addObjectFactory($factory, $id);
        public function findObjectFactory($id);
        public function getImplicitContext();
        public function getProperties();
        public function getLogger();
        public function getObserver();
        public function getDefaultRouter();
        public function setDefaultRouter($rtr);
        public function getDefaultLocator();
        public function setDefaultLocator($loc);
        public function getPluginManager();
        public function flushBatchRequests();
        public function createAdmin($adminAdapter, $adminId);
        public function getAdmin();
        public function addAdminFacet($servant, $facet);
        public function removeAdminFacet($facet);
        public function findAdminFacet($facet);
        public function findAllAdminFacets();
    }

    $Ice__t_Communicator = IcePHP_defineClass('::Ice::Communicator', 'Ice_Communicator', -1, true, false, $Ice__t_Object, null, null);
}
?>
