// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.2
//
// <auto-generated>
//
// Generated from file `evtcenter.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package sooh.services.evtcenter;

/**
 * Provides type-specific helper functions.
 **/
public final class triggersPrxHelper extends Ice.ObjectPrxHelperBase implements triggersPrx
{
    private static final String __onBuyConfirm_name = "onBuyConfirm";

    public void onBuyConfirm(String data)
    {
        onBuyConfirm(data, null, false);
    }

    public void onBuyConfirm(String data, java.util.Map<String, String> __ctx)
    {
        onBuyConfirm(data, __ctx, true);
    }

    private void onBuyConfirm(String data, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        end_onBuyConfirm(begin_onBuyConfirm(data, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_onBuyConfirm(String data)
    {
        return begin_onBuyConfirm(data, null, false, false, null);
    }

    public Ice.AsyncResult begin_onBuyConfirm(String data, java.util.Map<String, String> __ctx)
    {
        return begin_onBuyConfirm(data, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_onBuyConfirm(String data, Ice.Callback __cb)
    {
        return begin_onBuyConfirm(data, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_onBuyConfirm(String data, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_onBuyConfirm(data, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_onBuyConfirm(String data, Callback_triggers_onBuyConfirm __cb)
    {
        return begin_onBuyConfirm(data, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_onBuyConfirm(String data, java.util.Map<String, String> __ctx, Callback_triggers_onBuyConfirm __cb)
    {
        return begin_onBuyConfirm(data, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_onBuyConfirm(String data, 
                                              IceInternal.Functional_VoidCallback __responseCb, 
                                              IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_onBuyConfirm(data, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_onBuyConfirm(String data, 
                                              IceInternal.Functional_VoidCallback __responseCb, 
                                              IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                              IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_onBuyConfirm(data, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_onBuyConfirm(String data, 
                                              java.util.Map<String, String> __ctx, 
                                              IceInternal.Functional_VoidCallback __responseCb, 
                                              IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_onBuyConfirm(data, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_onBuyConfirm(String data, 
                                              java.util.Map<String, String> __ctx, 
                                              IceInternal.Functional_VoidCallback __responseCb, 
                                              IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                              IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_onBuyConfirm(data, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_onBuyConfirm(String data, 
                                               java.util.Map<String, String> __ctx, 
                                               boolean __explicitCtx, 
                                               boolean __synchronous, 
                                               IceInternal.Functional_VoidCallback __responseCb, 
                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                               IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_onBuyConfirm(data, 
                                  __ctx, 
                                  __explicitCtx, 
                                  __synchronous, 
                                  new IceInternal.Functional_OnewayCallback(__responseCb, __exceptionCb, __sentCb));
    }

    private Ice.AsyncResult begin_onBuyConfirm(String data, 
                                               java.util.Map<String, String> __ctx, 
                                               boolean __explicitCtx, 
                                               boolean __synchronous, 
                                               IceInternal.CallbackBase __cb)
    {
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__onBuyConfirm_name, __cb);
        try
        {
            __result.prepare(__onBuyConfirm_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            __os.writeString(data);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public void end_onBuyConfirm(Ice.AsyncResult __iresult)
    {
        __end(__iresult, __onBuyConfirm_name);
    }

    private static final String __onBuyRequest_name = "onBuyRequest";

    public void onBuyRequest(String data)
    {
        onBuyRequest(data, null, false);
    }

    public void onBuyRequest(String data, java.util.Map<String, String> __ctx)
    {
        onBuyRequest(data, __ctx, true);
    }

    private void onBuyRequest(String data, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        end_onBuyRequest(begin_onBuyRequest(data, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_onBuyRequest(String data)
    {
        return begin_onBuyRequest(data, null, false, false, null);
    }

    public Ice.AsyncResult begin_onBuyRequest(String data, java.util.Map<String, String> __ctx)
    {
        return begin_onBuyRequest(data, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_onBuyRequest(String data, Ice.Callback __cb)
    {
        return begin_onBuyRequest(data, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_onBuyRequest(String data, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_onBuyRequest(data, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_onBuyRequest(String data, Callback_triggers_onBuyRequest __cb)
    {
        return begin_onBuyRequest(data, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_onBuyRequest(String data, java.util.Map<String, String> __ctx, Callback_triggers_onBuyRequest __cb)
    {
        return begin_onBuyRequest(data, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_onBuyRequest(String data, 
                                              IceInternal.Functional_VoidCallback __responseCb, 
                                              IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_onBuyRequest(data, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_onBuyRequest(String data, 
                                              IceInternal.Functional_VoidCallback __responseCb, 
                                              IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                              IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_onBuyRequest(data, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_onBuyRequest(String data, 
                                              java.util.Map<String, String> __ctx, 
                                              IceInternal.Functional_VoidCallback __responseCb, 
                                              IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_onBuyRequest(data, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_onBuyRequest(String data, 
                                              java.util.Map<String, String> __ctx, 
                                              IceInternal.Functional_VoidCallback __responseCb, 
                                              IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                              IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_onBuyRequest(data, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_onBuyRequest(String data, 
                                               java.util.Map<String, String> __ctx, 
                                               boolean __explicitCtx, 
                                               boolean __synchronous, 
                                               IceInternal.Functional_VoidCallback __responseCb, 
                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                               IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_onBuyRequest(data, 
                                  __ctx, 
                                  __explicitCtx, 
                                  __synchronous, 
                                  new IceInternal.Functional_OnewayCallback(__responseCb, __exceptionCb, __sentCb));
    }

    private Ice.AsyncResult begin_onBuyRequest(String data, 
                                               java.util.Map<String, String> __ctx, 
                                               boolean __explicitCtx, 
                                               boolean __synchronous, 
                                               IceInternal.CallbackBase __cb)
    {
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__onBuyRequest_name, __cb);
        try
        {
            __result.prepare(__onBuyRequest_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            __os.writeString(data);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public void end_onBuyRequest(Ice.AsyncResult __iresult)
    {
        __end(__iresult, __onBuyRequest_name);
    }

    private static final String __onCustomEvt_name = "onCustomEvt";

    public void onCustomEvt(String evt, String data)
    {
        onCustomEvt(evt, data, null, false);
    }

    public void onCustomEvt(String evt, String data, java.util.Map<String, String> __ctx)
    {
        onCustomEvt(evt, data, __ctx, true);
    }

    private void onCustomEvt(String evt, String data, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        end_onCustomEvt(begin_onCustomEvt(evt, data, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_onCustomEvt(String evt, String data)
    {
        return begin_onCustomEvt(evt, data, null, false, false, null);
    }

    public Ice.AsyncResult begin_onCustomEvt(String evt, String data, java.util.Map<String, String> __ctx)
    {
        return begin_onCustomEvt(evt, data, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_onCustomEvt(String evt, String data, Ice.Callback __cb)
    {
        return begin_onCustomEvt(evt, data, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_onCustomEvt(String evt, String data, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_onCustomEvt(evt, data, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_onCustomEvt(String evt, String data, Callback_triggers_onCustomEvt __cb)
    {
        return begin_onCustomEvt(evt, data, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_onCustomEvt(String evt, String data, java.util.Map<String, String> __ctx, Callback_triggers_onCustomEvt __cb)
    {
        return begin_onCustomEvt(evt, data, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_onCustomEvt(String evt, 
                                             String data, 
                                             IceInternal.Functional_VoidCallback __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_onCustomEvt(evt, data, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_onCustomEvt(String evt, 
                                             String data, 
                                             IceInternal.Functional_VoidCallback __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                             IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_onCustomEvt(evt, data, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_onCustomEvt(String evt, 
                                             String data, 
                                             java.util.Map<String, String> __ctx, 
                                             IceInternal.Functional_VoidCallback __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_onCustomEvt(evt, data, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_onCustomEvt(String evt, 
                                             String data, 
                                             java.util.Map<String, String> __ctx, 
                                             IceInternal.Functional_VoidCallback __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                             IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_onCustomEvt(evt, data, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_onCustomEvt(String evt, 
                                              String data, 
                                              java.util.Map<String, String> __ctx, 
                                              boolean __explicitCtx, 
                                              boolean __synchronous, 
                                              IceInternal.Functional_VoidCallback __responseCb, 
                                              IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                              IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_onCustomEvt(evt, 
                                 data, 
                                 __ctx, 
                                 __explicitCtx, 
                                 __synchronous, 
                                 new IceInternal.Functional_OnewayCallback(__responseCb, __exceptionCb, __sentCb));
    }

    private Ice.AsyncResult begin_onCustomEvt(String evt, 
                                              String data, 
                                              java.util.Map<String, String> __ctx, 
                                              boolean __explicitCtx, 
                                              boolean __synchronous, 
                                              IceInternal.CallbackBase __cb)
    {
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__onCustomEvt_name, __cb);
        try
        {
            __result.prepare(__onCustomEvt_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            __os.writeString(evt);
            __os.writeString(data);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public void end_onCustomEvt(Ice.AsyncResult __iresult)
    {
        __end(__iresult, __onCustomEvt_name);
    }

    private static final String __onLogin_name = "onLogin";

    public void onLogin(String data)
    {
        onLogin(data, null, false);
    }

    public void onLogin(String data, java.util.Map<String, String> __ctx)
    {
        onLogin(data, __ctx, true);
    }

    private void onLogin(String data, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        end_onLogin(begin_onLogin(data, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_onLogin(String data)
    {
        return begin_onLogin(data, null, false, false, null);
    }

    public Ice.AsyncResult begin_onLogin(String data, java.util.Map<String, String> __ctx)
    {
        return begin_onLogin(data, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_onLogin(String data, Ice.Callback __cb)
    {
        return begin_onLogin(data, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_onLogin(String data, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_onLogin(data, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_onLogin(String data, Callback_triggers_onLogin __cb)
    {
        return begin_onLogin(data, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_onLogin(String data, java.util.Map<String, String> __ctx, Callback_triggers_onLogin __cb)
    {
        return begin_onLogin(data, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_onLogin(String data, 
                                         IceInternal.Functional_VoidCallback __responseCb, 
                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_onLogin(data, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_onLogin(String data, 
                                         IceInternal.Functional_VoidCallback __responseCb, 
                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                         IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_onLogin(data, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_onLogin(String data, 
                                         java.util.Map<String, String> __ctx, 
                                         IceInternal.Functional_VoidCallback __responseCb, 
                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_onLogin(data, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_onLogin(String data, 
                                         java.util.Map<String, String> __ctx, 
                                         IceInternal.Functional_VoidCallback __responseCb, 
                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                         IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_onLogin(data, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_onLogin(String data, 
                                          java.util.Map<String, String> __ctx, 
                                          boolean __explicitCtx, 
                                          boolean __synchronous, 
                                          IceInternal.Functional_VoidCallback __responseCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                          IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_onLogin(data, 
                             __ctx, 
                             __explicitCtx, 
                             __synchronous, 
                             new IceInternal.Functional_OnewayCallback(__responseCb, __exceptionCb, __sentCb));
    }

    private Ice.AsyncResult begin_onLogin(String data, 
                                          java.util.Map<String, String> __ctx, 
                                          boolean __explicitCtx, 
                                          boolean __synchronous, 
                                          IceInternal.CallbackBase __cb)
    {
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__onLogin_name, __cb);
        try
        {
            __result.prepare(__onLogin_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            __os.writeString(data);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public void end_onLogin(Ice.AsyncResult __iresult)
    {
        __end(__iresult, __onLogin_name);
    }

    private static final String __onLogout_name = "onLogout";

    public void onLogout(String data)
    {
        onLogout(data, null, false);
    }

    public void onLogout(String data, java.util.Map<String, String> __ctx)
    {
        onLogout(data, __ctx, true);
    }

    private void onLogout(String data, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        end_onLogout(begin_onLogout(data, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_onLogout(String data)
    {
        return begin_onLogout(data, null, false, false, null);
    }

    public Ice.AsyncResult begin_onLogout(String data, java.util.Map<String, String> __ctx)
    {
        return begin_onLogout(data, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_onLogout(String data, Ice.Callback __cb)
    {
        return begin_onLogout(data, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_onLogout(String data, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_onLogout(data, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_onLogout(String data, Callback_triggers_onLogout __cb)
    {
        return begin_onLogout(data, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_onLogout(String data, java.util.Map<String, String> __ctx, Callback_triggers_onLogout __cb)
    {
        return begin_onLogout(data, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_onLogout(String data, 
                                          IceInternal.Functional_VoidCallback __responseCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_onLogout(data, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_onLogout(String data, 
                                          IceInternal.Functional_VoidCallback __responseCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                          IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_onLogout(data, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_onLogout(String data, 
                                          java.util.Map<String, String> __ctx, 
                                          IceInternal.Functional_VoidCallback __responseCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_onLogout(data, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_onLogout(String data, 
                                          java.util.Map<String, String> __ctx, 
                                          IceInternal.Functional_VoidCallback __responseCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                          IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_onLogout(data, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_onLogout(String data, 
                                           java.util.Map<String, String> __ctx, 
                                           boolean __explicitCtx, 
                                           boolean __synchronous, 
                                           IceInternal.Functional_VoidCallback __responseCb, 
                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                           IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_onLogout(data, 
                              __ctx, 
                              __explicitCtx, 
                              __synchronous, 
                              new IceInternal.Functional_OnewayCallback(__responseCb, __exceptionCb, __sentCb));
    }

    private Ice.AsyncResult begin_onLogout(String data, 
                                           java.util.Map<String, String> __ctx, 
                                           boolean __explicitCtx, 
                                           boolean __synchronous, 
                                           IceInternal.CallbackBase __cb)
    {
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__onLogout_name, __cb);
        try
        {
            __result.prepare(__onLogout_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            __os.writeString(data);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public void end_onLogout(Ice.AsyncResult __iresult)
    {
        __end(__iresult, __onLogout_name);
    }

    private static final String __onRechargeConfirm_name = "onRechargeConfirm";

    public void onRechargeConfirm(String data)
    {
        onRechargeConfirm(data, null, false);
    }

    public void onRechargeConfirm(String data, java.util.Map<String, String> __ctx)
    {
        onRechargeConfirm(data, __ctx, true);
    }

    private void onRechargeConfirm(String data, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        end_onRechargeConfirm(begin_onRechargeConfirm(data, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_onRechargeConfirm(String data)
    {
        return begin_onRechargeConfirm(data, null, false, false, null);
    }

    public Ice.AsyncResult begin_onRechargeConfirm(String data, java.util.Map<String, String> __ctx)
    {
        return begin_onRechargeConfirm(data, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_onRechargeConfirm(String data, Ice.Callback __cb)
    {
        return begin_onRechargeConfirm(data, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_onRechargeConfirm(String data, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_onRechargeConfirm(data, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_onRechargeConfirm(String data, Callback_triggers_onRechargeConfirm __cb)
    {
        return begin_onRechargeConfirm(data, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_onRechargeConfirm(String data, java.util.Map<String, String> __ctx, Callback_triggers_onRechargeConfirm __cb)
    {
        return begin_onRechargeConfirm(data, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_onRechargeConfirm(String data, 
                                                   IceInternal.Functional_VoidCallback __responseCb, 
                                                   IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_onRechargeConfirm(data, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_onRechargeConfirm(String data, 
                                                   IceInternal.Functional_VoidCallback __responseCb, 
                                                   IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                   IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_onRechargeConfirm(data, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_onRechargeConfirm(String data, 
                                                   java.util.Map<String, String> __ctx, 
                                                   IceInternal.Functional_VoidCallback __responseCb, 
                                                   IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_onRechargeConfirm(data, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_onRechargeConfirm(String data, 
                                                   java.util.Map<String, String> __ctx, 
                                                   IceInternal.Functional_VoidCallback __responseCb, 
                                                   IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                   IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_onRechargeConfirm(data, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_onRechargeConfirm(String data, 
                                                    java.util.Map<String, String> __ctx, 
                                                    boolean __explicitCtx, 
                                                    boolean __synchronous, 
                                                    IceInternal.Functional_VoidCallback __responseCb, 
                                                    IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                    IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_onRechargeConfirm(data, 
                                       __ctx, 
                                       __explicitCtx, 
                                       __synchronous, 
                                       new IceInternal.Functional_OnewayCallback(__responseCb, __exceptionCb, __sentCb));
    }

    private Ice.AsyncResult begin_onRechargeConfirm(String data, 
                                                    java.util.Map<String, String> __ctx, 
                                                    boolean __explicitCtx, 
                                                    boolean __synchronous, 
                                                    IceInternal.CallbackBase __cb)
    {
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__onRechargeConfirm_name, __cb);
        try
        {
            __result.prepare(__onRechargeConfirm_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            __os.writeString(data);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public void end_onRechargeConfirm(Ice.AsyncResult __iresult)
    {
        __end(__iresult, __onRechargeConfirm_name);
    }

    private static final String __onRechargeRequest_name = "onRechargeRequest";

    public void onRechargeRequest(String data)
    {
        onRechargeRequest(data, null, false);
    }

    public void onRechargeRequest(String data, java.util.Map<String, String> __ctx)
    {
        onRechargeRequest(data, __ctx, true);
    }

    private void onRechargeRequest(String data, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        end_onRechargeRequest(begin_onRechargeRequest(data, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_onRechargeRequest(String data)
    {
        return begin_onRechargeRequest(data, null, false, false, null);
    }

    public Ice.AsyncResult begin_onRechargeRequest(String data, java.util.Map<String, String> __ctx)
    {
        return begin_onRechargeRequest(data, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_onRechargeRequest(String data, Ice.Callback __cb)
    {
        return begin_onRechargeRequest(data, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_onRechargeRequest(String data, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_onRechargeRequest(data, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_onRechargeRequest(String data, Callback_triggers_onRechargeRequest __cb)
    {
        return begin_onRechargeRequest(data, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_onRechargeRequest(String data, java.util.Map<String, String> __ctx, Callback_triggers_onRechargeRequest __cb)
    {
        return begin_onRechargeRequest(data, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_onRechargeRequest(String data, 
                                                   IceInternal.Functional_VoidCallback __responseCb, 
                                                   IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_onRechargeRequest(data, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_onRechargeRequest(String data, 
                                                   IceInternal.Functional_VoidCallback __responseCb, 
                                                   IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                   IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_onRechargeRequest(data, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_onRechargeRequest(String data, 
                                                   java.util.Map<String, String> __ctx, 
                                                   IceInternal.Functional_VoidCallback __responseCb, 
                                                   IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_onRechargeRequest(data, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_onRechargeRequest(String data, 
                                                   java.util.Map<String, String> __ctx, 
                                                   IceInternal.Functional_VoidCallback __responseCb, 
                                                   IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                   IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_onRechargeRequest(data, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_onRechargeRequest(String data, 
                                                    java.util.Map<String, String> __ctx, 
                                                    boolean __explicitCtx, 
                                                    boolean __synchronous, 
                                                    IceInternal.Functional_VoidCallback __responseCb, 
                                                    IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                    IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_onRechargeRequest(data, 
                                       __ctx, 
                                       __explicitCtx, 
                                       __synchronous, 
                                       new IceInternal.Functional_OnewayCallback(__responseCb, __exceptionCb, __sentCb));
    }

    private Ice.AsyncResult begin_onRechargeRequest(String data, 
                                                    java.util.Map<String, String> __ctx, 
                                                    boolean __explicitCtx, 
                                                    boolean __synchronous, 
                                                    IceInternal.CallbackBase __cb)
    {
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__onRechargeRequest_name, __cb);
        try
        {
            __result.prepare(__onRechargeRequest_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            __os.writeString(data);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public void end_onRechargeRequest(Ice.AsyncResult __iresult)
    {
        __end(__iresult, __onRechargeRequest_name);
    }

    private static final String __onRegister_name = "onRegister";

    public void onRegister(String data)
    {
        onRegister(data, null, false);
    }

    public void onRegister(String data, java.util.Map<String, String> __ctx)
    {
        onRegister(data, __ctx, true);
    }

    private void onRegister(String data, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        end_onRegister(begin_onRegister(data, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_onRegister(String data)
    {
        return begin_onRegister(data, null, false, false, null);
    }

    public Ice.AsyncResult begin_onRegister(String data, java.util.Map<String, String> __ctx)
    {
        return begin_onRegister(data, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_onRegister(String data, Ice.Callback __cb)
    {
        return begin_onRegister(data, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_onRegister(String data, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_onRegister(data, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_onRegister(String data, Callback_triggers_onRegister __cb)
    {
        return begin_onRegister(data, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_onRegister(String data, java.util.Map<String, String> __ctx, Callback_triggers_onRegister __cb)
    {
        return begin_onRegister(data, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_onRegister(String data, 
                                            IceInternal.Functional_VoidCallback __responseCb, 
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_onRegister(data, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_onRegister(String data, 
                                            IceInternal.Functional_VoidCallback __responseCb, 
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                            IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_onRegister(data, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_onRegister(String data, 
                                            java.util.Map<String, String> __ctx, 
                                            IceInternal.Functional_VoidCallback __responseCb, 
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_onRegister(data, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_onRegister(String data, 
                                            java.util.Map<String, String> __ctx, 
                                            IceInternal.Functional_VoidCallback __responseCb, 
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                            IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_onRegister(data, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_onRegister(String data, 
                                             java.util.Map<String, String> __ctx, 
                                             boolean __explicitCtx, 
                                             boolean __synchronous, 
                                             IceInternal.Functional_VoidCallback __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                             IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_onRegister(data, 
                                __ctx, 
                                __explicitCtx, 
                                __synchronous, 
                                new IceInternal.Functional_OnewayCallback(__responseCb, __exceptionCb, __sentCb));
    }

    private Ice.AsyncResult begin_onRegister(String data, 
                                             java.util.Map<String, String> __ctx, 
                                             boolean __explicitCtx, 
                                             boolean __synchronous, 
                                             IceInternal.CallbackBase __cb)
    {
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__onRegister_name, __cb);
        try
        {
            __result.prepare(__onRegister_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            __os.writeString(data);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public void end_onRegister(Ice.AsyncResult __iresult)
    {
        __end(__iresult, __onRegister_name);
    }

    private static final String __onWaresEnd_name = "onWaresEnd";

    public void onWaresEnd(String data)
    {
        onWaresEnd(data, null, false);
    }

    public void onWaresEnd(String data, java.util.Map<String, String> __ctx)
    {
        onWaresEnd(data, __ctx, true);
    }

    private void onWaresEnd(String data, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        end_onWaresEnd(begin_onWaresEnd(data, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_onWaresEnd(String data)
    {
        return begin_onWaresEnd(data, null, false, false, null);
    }

    public Ice.AsyncResult begin_onWaresEnd(String data, java.util.Map<String, String> __ctx)
    {
        return begin_onWaresEnd(data, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_onWaresEnd(String data, Ice.Callback __cb)
    {
        return begin_onWaresEnd(data, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_onWaresEnd(String data, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_onWaresEnd(data, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_onWaresEnd(String data, Callback_triggers_onWaresEnd __cb)
    {
        return begin_onWaresEnd(data, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_onWaresEnd(String data, java.util.Map<String, String> __ctx, Callback_triggers_onWaresEnd __cb)
    {
        return begin_onWaresEnd(data, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_onWaresEnd(String data, 
                                            IceInternal.Functional_VoidCallback __responseCb, 
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_onWaresEnd(data, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_onWaresEnd(String data, 
                                            IceInternal.Functional_VoidCallback __responseCb, 
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                            IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_onWaresEnd(data, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_onWaresEnd(String data, 
                                            java.util.Map<String, String> __ctx, 
                                            IceInternal.Functional_VoidCallback __responseCb, 
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_onWaresEnd(data, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_onWaresEnd(String data, 
                                            java.util.Map<String, String> __ctx, 
                                            IceInternal.Functional_VoidCallback __responseCb, 
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                            IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_onWaresEnd(data, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_onWaresEnd(String data, 
                                             java.util.Map<String, String> __ctx, 
                                             boolean __explicitCtx, 
                                             boolean __synchronous, 
                                             IceInternal.Functional_VoidCallback __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                             IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_onWaresEnd(data, 
                                __ctx, 
                                __explicitCtx, 
                                __synchronous, 
                                new IceInternal.Functional_OnewayCallback(__responseCb, __exceptionCb, __sentCb));
    }

    private Ice.AsyncResult begin_onWaresEnd(String data, 
                                             java.util.Map<String, String> __ctx, 
                                             boolean __explicitCtx, 
                                             boolean __synchronous, 
                                             IceInternal.CallbackBase __cb)
    {
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__onWaresEnd_name, __cb);
        try
        {
            __result.prepare(__onWaresEnd_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            __os.writeString(data);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public void end_onWaresEnd(Ice.AsyncResult __iresult)
    {
        __end(__iresult, __onWaresEnd_name);
    }

    private static final String __onWaresFull_name = "onWaresFull";

    public void onWaresFull(String data)
    {
        onWaresFull(data, null, false);
    }

    public void onWaresFull(String data, java.util.Map<String, String> __ctx)
    {
        onWaresFull(data, __ctx, true);
    }

    private void onWaresFull(String data, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        end_onWaresFull(begin_onWaresFull(data, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_onWaresFull(String data)
    {
        return begin_onWaresFull(data, null, false, false, null);
    }

    public Ice.AsyncResult begin_onWaresFull(String data, java.util.Map<String, String> __ctx)
    {
        return begin_onWaresFull(data, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_onWaresFull(String data, Ice.Callback __cb)
    {
        return begin_onWaresFull(data, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_onWaresFull(String data, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_onWaresFull(data, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_onWaresFull(String data, Callback_triggers_onWaresFull __cb)
    {
        return begin_onWaresFull(data, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_onWaresFull(String data, java.util.Map<String, String> __ctx, Callback_triggers_onWaresFull __cb)
    {
        return begin_onWaresFull(data, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_onWaresFull(String data, 
                                             IceInternal.Functional_VoidCallback __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_onWaresFull(data, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_onWaresFull(String data, 
                                             IceInternal.Functional_VoidCallback __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                             IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_onWaresFull(data, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_onWaresFull(String data, 
                                             java.util.Map<String, String> __ctx, 
                                             IceInternal.Functional_VoidCallback __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_onWaresFull(data, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_onWaresFull(String data, 
                                             java.util.Map<String, String> __ctx, 
                                             IceInternal.Functional_VoidCallback __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                             IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_onWaresFull(data, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_onWaresFull(String data, 
                                              java.util.Map<String, String> __ctx, 
                                              boolean __explicitCtx, 
                                              boolean __synchronous, 
                                              IceInternal.Functional_VoidCallback __responseCb, 
                                              IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                              IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_onWaresFull(data, 
                                 __ctx, 
                                 __explicitCtx, 
                                 __synchronous, 
                                 new IceInternal.Functional_OnewayCallback(__responseCb, __exceptionCb, __sentCb));
    }

    private Ice.AsyncResult begin_onWaresFull(String data, 
                                              java.util.Map<String, String> __ctx, 
                                              boolean __explicitCtx, 
                                              boolean __synchronous, 
                                              IceInternal.CallbackBase __cb)
    {
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__onWaresFull_name, __cb);
        try
        {
            __result.prepare(__onWaresFull_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            __os.writeString(data);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public void end_onWaresFull(Ice.AsyncResult __iresult)
    {
        __end(__iresult, __onWaresFull_name);
    }

    private static final String __onWaresMonthly_name = "onWaresMonthly";

    public void onWaresMonthly(String data)
    {
        onWaresMonthly(data, null, false);
    }

    public void onWaresMonthly(String data, java.util.Map<String, String> __ctx)
    {
        onWaresMonthly(data, __ctx, true);
    }

    private void onWaresMonthly(String data, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        end_onWaresMonthly(begin_onWaresMonthly(data, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_onWaresMonthly(String data)
    {
        return begin_onWaresMonthly(data, null, false, false, null);
    }

    public Ice.AsyncResult begin_onWaresMonthly(String data, java.util.Map<String, String> __ctx)
    {
        return begin_onWaresMonthly(data, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_onWaresMonthly(String data, Ice.Callback __cb)
    {
        return begin_onWaresMonthly(data, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_onWaresMonthly(String data, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_onWaresMonthly(data, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_onWaresMonthly(String data, Callback_triggers_onWaresMonthly __cb)
    {
        return begin_onWaresMonthly(data, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_onWaresMonthly(String data, java.util.Map<String, String> __ctx, Callback_triggers_onWaresMonthly __cb)
    {
        return begin_onWaresMonthly(data, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_onWaresMonthly(String data, 
                                                IceInternal.Functional_VoidCallback __responseCb, 
                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_onWaresMonthly(data, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_onWaresMonthly(String data, 
                                                IceInternal.Functional_VoidCallback __responseCb, 
                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_onWaresMonthly(data, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_onWaresMonthly(String data, 
                                                java.util.Map<String, String> __ctx, 
                                                IceInternal.Functional_VoidCallback __responseCb, 
                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_onWaresMonthly(data, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_onWaresMonthly(String data, 
                                                java.util.Map<String, String> __ctx, 
                                                IceInternal.Functional_VoidCallback __responseCb, 
                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_onWaresMonthly(data, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_onWaresMonthly(String data, 
                                                 java.util.Map<String, String> __ctx, 
                                                 boolean __explicitCtx, 
                                                 boolean __synchronous, 
                                                 IceInternal.Functional_VoidCallback __responseCb, 
                                                 IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                 IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_onWaresMonthly(data, 
                                    __ctx, 
                                    __explicitCtx, 
                                    __synchronous, 
                                    new IceInternal.Functional_OnewayCallback(__responseCb, __exceptionCb, __sentCb));
    }

    private Ice.AsyncResult begin_onWaresMonthly(String data, 
                                                 java.util.Map<String, String> __ctx, 
                                                 boolean __explicitCtx, 
                                                 boolean __synchronous, 
                                                 IceInternal.CallbackBase __cb)
    {
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__onWaresMonthly_name, __cb);
        try
        {
            __result.prepare(__onWaresMonthly_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            __os.writeString(data);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public void end_onWaresMonthly(Ice.AsyncResult __iresult)
    {
        __end(__iresult, __onWaresMonthly_name);
    }

    private static final String __onWithdrawConfirm_name = "onWithdrawConfirm";

    public void onWithdrawConfirm(String data)
    {
        onWithdrawConfirm(data, null, false);
    }

    public void onWithdrawConfirm(String data, java.util.Map<String, String> __ctx)
    {
        onWithdrawConfirm(data, __ctx, true);
    }

    private void onWithdrawConfirm(String data, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        end_onWithdrawConfirm(begin_onWithdrawConfirm(data, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_onWithdrawConfirm(String data)
    {
        return begin_onWithdrawConfirm(data, null, false, false, null);
    }

    public Ice.AsyncResult begin_onWithdrawConfirm(String data, java.util.Map<String, String> __ctx)
    {
        return begin_onWithdrawConfirm(data, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_onWithdrawConfirm(String data, Ice.Callback __cb)
    {
        return begin_onWithdrawConfirm(data, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_onWithdrawConfirm(String data, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_onWithdrawConfirm(data, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_onWithdrawConfirm(String data, Callback_triggers_onWithdrawConfirm __cb)
    {
        return begin_onWithdrawConfirm(data, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_onWithdrawConfirm(String data, java.util.Map<String, String> __ctx, Callback_triggers_onWithdrawConfirm __cb)
    {
        return begin_onWithdrawConfirm(data, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_onWithdrawConfirm(String data, 
                                                   IceInternal.Functional_VoidCallback __responseCb, 
                                                   IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_onWithdrawConfirm(data, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_onWithdrawConfirm(String data, 
                                                   IceInternal.Functional_VoidCallback __responseCb, 
                                                   IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                   IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_onWithdrawConfirm(data, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_onWithdrawConfirm(String data, 
                                                   java.util.Map<String, String> __ctx, 
                                                   IceInternal.Functional_VoidCallback __responseCb, 
                                                   IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_onWithdrawConfirm(data, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_onWithdrawConfirm(String data, 
                                                   java.util.Map<String, String> __ctx, 
                                                   IceInternal.Functional_VoidCallback __responseCb, 
                                                   IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                   IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_onWithdrawConfirm(data, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_onWithdrawConfirm(String data, 
                                                    java.util.Map<String, String> __ctx, 
                                                    boolean __explicitCtx, 
                                                    boolean __synchronous, 
                                                    IceInternal.Functional_VoidCallback __responseCb, 
                                                    IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                    IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_onWithdrawConfirm(data, 
                                       __ctx, 
                                       __explicitCtx, 
                                       __synchronous, 
                                       new IceInternal.Functional_OnewayCallback(__responseCb, __exceptionCb, __sentCb));
    }

    private Ice.AsyncResult begin_onWithdrawConfirm(String data, 
                                                    java.util.Map<String, String> __ctx, 
                                                    boolean __explicitCtx, 
                                                    boolean __synchronous, 
                                                    IceInternal.CallbackBase __cb)
    {
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__onWithdrawConfirm_name, __cb);
        try
        {
            __result.prepare(__onWithdrawConfirm_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            __os.writeString(data);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public void end_onWithdrawConfirm(Ice.AsyncResult __iresult)
    {
        __end(__iresult, __onWithdrawConfirm_name);
    }

    private static final String __onWithdrawRequest_name = "onWithdrawRequest";

    public void onWithdrawRequest(String data)
    {
        onWithdrawRequest(data, null, false);
    }

    public void onWithdrawRequest(String data, java.util.Map<String, String> __ctx)
    {
        onWithdrawRequest(data, __ctx, true);
    }

    private void onWithdrawRequest(String data, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        end_onWithdrawRequest(begin_onWithdrawRequest(data, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_onWithdrawRequest(String data)
    {
        return begin_onWithdrawRequest(data, null, false, false, null);
    }

    public Ice.AsyncResult begin_onWithdrawRequest(String data, java.util.Map<String, String> __ctx)
    {
        return begin_onWithdrawRequest(data, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_onWithdrawRequest(String data, Ice.Callback __cb)
    {
        return begin_onWithdrawRequest(data, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_onWithdrawRequest(String data, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_onWithdrawRequest(data, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_onWithdrawRequest(String data, Callback_triggers_onWithdrawRequest __cb)
    {
        return begin_onWithdrawRequest(data, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_onWithdrawRequest(String data, java.util.Map<String, String> __ctx, Callback_triggers_onWithdrawRequest __cb)
    {
        return begin_onWithdrawRequest(data, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_onWithdrawRequest(String data, 
                                                   IceInternal.Functional_VoidCallback __responseCb, 
                                                   IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_onWithdrawRequest(data, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_onWithdrawRequest(String data, 
                                                   IceInternal.Functional_VoidCallback __responseCb, 
                                                   IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                   IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_onWithdrawRequest(data, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_onWithdrawRequest(String data, 
                                                   java.util.Map<String, String> __ctx, 
                                                   IceInternal.Functional_VoidCallback __responseCb, 
                                                   IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_onWithdrawRequest(data, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_onWithdrawRequest(String data, 
                                                   java.util.Map<String, String> __ctx, 
                                                   IceInternal.Functional_VoidCallback __responseCb, 
                                                   IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                   IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_onWithdrawRequest(data, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_onWithdrawRequest(String data, 
                                                    java.util.Map<String, String> __ctx, 
                                                    boolean __explicitCtx, 
                                                    boolean __synchronous, 
                                                    IceInternal.Functional_VoidCallback __responseCb, 
                                                    IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                    IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_onWithdrawRequest(data, 
                                       __ctx, 
                                       __explicitCtx, 
                                       __synchronous, 
                                       new IceInternal.Functional_OnewayCallback(__responseCb, __exceptionCb, __sentCb));
    }

    private Ice.AsyncResult begin_onWithdrawRequest(String data, 
                                                    java.util.Map<String, String> __ctx, 
                                                    boolean __explicitCtx, 
                                                    boolean __synchronous, 
                                                    IceInternal.CallbackBase __cb)
    {
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__onWithdrawRequest_name, __cb);
        try
        {
            __result.prepare(__onWithdrawRequest_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            __os.writeString(data);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public void end_onWithdrawRequest(Ice.AsyncResult __iresult)
    {
        __end(__iresult, __onWithdrawRequest_name);
    }

    /**
     * Contacts the remote server to verify that the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static triggersPrx checkedCast(Ice.ObjectPrx __obj)
    {
        return checkedCastImpl(__obj, ice_staticId(), triggersPrx.class, triggersPrxHelper.class);
    }

    /**
     * Contacts the remote server to verify that the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @param __ctx The Context map to send with the invocation.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static triggersPrx checkedCast(Ice.ObjectPrx __obj, java.util.Map<String, String> __ctx)
    {
        return checkedCastImpl(__obj, __ctx, ice_staticId(), triggersPrx.class, triggersPrxHelper.class);
    }

    /**
     * Contacts the remote server to verify that a facet of the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @param __facet The name of the desired facet.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static triggersPrx checkedCast(Ice.ObjectPrx __obj, String __facet)
    {
        return checkedCastImpl(__obj, __facet, ice_staticId(), triggersPrx.class, triggersPrxHelper.class);
    }

    /**
     * Contacts the remote server to verify that a facet of the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @param __facet The name of the desired facet.
     * @param __ctx The Context map to send with the invocation.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static triggersPrx checkedCast(Ice.ObjectPrx __obj, String __facet, java.util.Map<String, String> __ctx)
    {
        return checkedCastImpl(__obj, __facet, __ctx, ice_staticId(), triggersPrx.class, triggersPrxHelper.class);
    }

    /**
     * Downcasts the given proxy to this type without contacting the remote server.
     * @param __obj The untyped proxy.
     * @return A proxy for this type.
     **/
    public static triggersPrx uncheckedCast(Ice.ObjectPrx __obj)
    {
        return uncheckedCastImpl(__obj, triggersPrx.class, triggersPrxHelper.class);
    }

    /**
     * Downcasts the given proxy to this type without contacting the remote server.
     * @param __obj The untyped proxy.
     * @param __facet The name of the desired facet.
     * @return A proxy for this type.
     **/
    public static triggersPrx uncheckedCast(Ice.ObjectPrx __obj, String __facet)
    {
        return uncheckedCastImpl(__obj, __facet, triggersPrx.class, triggersPrxHelper.class);
    }

    public static final String[] __ids =
    {
        "::Ice::Object",
        "::sooh::services::evtcenter::triggers"
    };

    /**
     * Provides the Slice type ID of this type.
     * @return The Slice type ID.
     **/
    public static String ice_staticId()
    {
        return __ids[1];
    }

    public static void __write(IceInternal.BasicStream __os, triggersPrx v)
    {
        __os.writeProxy(v);
    }

    public static triggersPrx __read(IceInternal.BasicStream __is)
    {
        Ice.ObjectPrx proxy = __is.readProxy();
        if(proxy != null)
        {
            triggersPrxHelper result = new triggersPrxHelper();
            result.__copyFrom(proxy);
            return result;
        }
        return null;
    }

    public static final long serialVersionUID = 0L;
}
