<?php
// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.2
//
// <auto-generated>
//
// Generated from file `Endpoint.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

require_once __DIR__.'/../Ice/Version.php';
require_once __DIR__.'/../Ice/BuiltinSequences.php';
require_once __DIR__.'/../Ice/EndpointF.php';

if(!defined('Ice_TCPEndpointType'))
{
    define('Ice_TCPEndpointType', 1);
}

if(!defined('Ice_SSLEndpointType'))
{
    define('Ice_SSLEndpointType', 2);
}

if(!defined('Ice_UDPEndpointType'))
{
    define('Ice_UDPEndpointType', 3);
}

if(!defined('Ice_WSEndpointType'))
{
    define('Ice_WSEndpointType', 4);
}

if(!defined('Ice_WSSEndpointType'))
{
    define('Ice_WSSEndpointType', 5);
}

global $Ice__t_EndpointInfo;

if(!class_exists('Ice_EndpointInfo',false))
{
    abstract class Ice_EndpointInfo
    {
        public function __construct($timeout=0, $compress=false)
        {
            $this->timeout = $timeout;
            $this->compress = $compress;
        }

        abstract public function type();
        abstract public function datagram();
        abstract public function secure();

        public function __toString()
        {
            global $Ice__t_EndpointInfo;
            return IcePHP_stringify($this, $Ice__t_EndpointInfo);
        }

        public $timeout;
        public $compress;
    }

    $Ice__t_EndpointInfo = IcePHP_defineClass('::Ice::EndpointInfo', 'Ice_EndpointInfo', -1, true, false, $Ice__t_Object, null, array(
        array('timeout', $IcePHP__t_int, false, 0),
        array('compress', $IcePHP__t_bool, false, 0)));
}

global $Ice__t_Endpoint;

if(!interface_exists('Ice_Endpoint',false))
{
    interface Ice_Endpoint
    {
        public function toString();
        public function getInfo();
    }

    $Ice__t_Endpoint = IcePHP_defineClass('::Ice::Endpoint', 'Ice_Endpoint', -1, true, false, $Ice__t_Object, null, null);
}

global $Ice__t_IPEndpointInfo;

if(!class_exists('Ice_IPEndpointInfo',false))
{
    abstract class Ice_IPEndpointInfo extends Ice_EndpointInfo
    {
        public function __construct($timeout=0, $compress=false, $host='', $port=0, $sourceAddress='')
        {
            parent::__construct($timeout, $compress);
            $this->host = $host;
            $this->port = $port;
            $this->sourceAddress = $sourceAddress;
        }

        public function __toString()
        {
            global $Ice__t_IPEndpointInfo;
            return IcePHP_stringify($this, $Ice__t_IPEndpointInfo);
        }

        public $host;
        public $port;
        public $sourceAddress;
    }

    $Ice__t_IPEndpointInfo = IcePHP_defineClass('::Ice::IPEndpointInfo', 'Ice_IPEndpointInfo', -1, true, false, $Ice__t_EndpointInfo, null, array(
        array('host', $IcePHP__t_string, false, 0),
        array('port', $IcePHP__t_int, false, 0),
        array('sourceAddress', $IcePHP__t_string, false, 0)));
}

global $Ice__t_TCPEndpointInfo;

if(!class_exists('Ice_TCPEndpointInfo',false))
{
    abstract class Ice_TCPEndpointInfo extends Ice_IPEndpointInfo
    {
        public function __construct($timeout=0, $compress=false, $host='', $port=0, $sourceAddress='')
        {
            parent::__construct($timeout, $compress, $host, $port, $sourceAddress);
        }

        public function __toString()
        {
            global $Ice__t_TCPEndpointInfo;
            return IcePHP_stringify($this, $Ice__t_TCPEndpointInfo);
        }
    }

    $Ice__t_TCPEndpointInfo = IcePHP_defineClass('::Ice::TCPEndpointInfo', 'Ice_TCPEndpointInfo', -1, true, false, $Ice__t_IPEndpointInfo, null, null);
}

global $Ice__t_UDPEndpointInfo;

if(!class_exists('Ice_UDPEndpointInfo',false))
{
    abstract class Ice_UDPEndpointInfo extends Ice_IPEndpointInfo
    {
        public function __construct($timeout=0, $compress=false, $host='', $port=0, $sourceAddress='', $mcastInterface='', $mcastTtl=0)
        {
            parent::__construct($timeout, $compress, $host, $port, $sourceAddress);
            $this->mcastInterface = $mcastInterface;
            $this->mcastTtl = $mcastTtl;
        }

        public function __toString()
        {
            global $Ice__t_UDPEndpointInfo;
            return IcePHP_stringify($this, $Ice__t_UDPEndpointInfo);
        }

        public $mcastInterface;
        public $mcastTtl;
    }

    $Ice__t_UDPEndpointInfo = IcePHP_defineClass('::Ice::UDPEndpointInfo', 'Ice_UDPEndpointInfo', -1, true, false, $Ice__t_IPEndpointInfo, null, array(
        array('mcastInterface', $IcePHP__t_string, false, 0),
        array('mcastTtl', $IcePHP__t_int, false, 0)));
}

global $Ice__t_WSEndpointInfo;

if(!class_exists('Ice_WSEndpointInfo',false))
{
    abstract class Ice_WSEndpointInfo extends Ice_TCPEndpointInfo
    {
        public function __construct($timeout=0, $compress=false, $host='', $port=0, $sourceAddress='', $resource='')
        {
            parent::__construct($timeout, $compress, $host, $port, $sourceAddress);
            $this->resource = $resource;
        }

        public function __toString()
        {
            global $Ice__t_WSEndpointInfo;
            return IcePHP_stringify($this, $Ice__t_WSEndpointInfo);
        }

        public $resource;
    }

    $Ice__t_WSEndpointInfo = IcePHP_defineClass('::Ice::WSEndpointInfo', 'Ice_WSEndpointInfo', -1, true, false, $Ice__t_TCPEndpointInfo, null, array(
        array('resource', $IcePHP__t_string, false, 0)));
}

global $Ice__t_OpaqueEndpointInfo;

if(!class_exists('Ice_OpaqueEndpointInfo',false))
{
    abstract class Ice_OpaqueEndpointInfo extends Ice_EndpointInfo
    {
        public function __construct($timeout=0, $compress=false, $rawEncoding=null, $rawBytes=null)
        {
            parent::__construct($timeout, $compress);
            $this->rawEncoding = is_null($rawEncoding) ? new Ice_EncodingVersion : $rawEncoding;
            $this->rawBytes = $rawBytes;
        }

        public function __toString()
        {
            global $Ice__t_OpaqueEndpointInfo;
            return IcePHP_stringify($this, $Ice__t_OpaqueEndpointInfo);
        }

        public $rawEncoding;
        public $rawBytes;
    }

    $Ice__t_OpaqueEndpointInfo = IcePHP_defineClass('::Ice::OpaqueEndpointInfo', 'Ice_OpaqueEndpointInfo', -1, true, false, $Ice__t_EndpointInfo, null, array(
        array('rawEncoding', $Ice__t_EncodingVersion, false, 0),
        array('rawBytes', $Ice__t_ByteSeq, false, 0)));
}
?>
